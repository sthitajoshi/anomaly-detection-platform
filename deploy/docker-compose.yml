version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - anomaly-detection

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - anomaly-detection

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - anomaly-detection

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/dashboards/:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - anomaly-detection

  go-service:
    build:
      context: ../go-service
      dockerfile: Dockerfile
    container_name: go-service
    ports:
      - "8080:8080"
    environment:
      - ELASTICSEARCH_URLS=http://elasticsearch:9200
      - PYTHON_SERVICE_URL=http://python-service:8000
    depends_on:
      - elasticsearch
    networks:
      - anomaly-detection

  python-service:
    build:
      context: ../python-service
      dockerfile: Dockerfile
    container_name: python-service
    ports:
      - "8000:8000"
    networks:
      - anomaly-detection

  fluent-bit:
    image: fluent/fluent-bit:2.2
    container_name: fluent-bit
    depends_on:
      - go-service
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    command: ["/fluent-bit/bin/fluent-bit", "-c", "/fluent-bit/etc/fluent-bit.conf"]
    networks:
      - anomaly-detection

volumes:
  elasticsearch_data:

networks:
  anomaly-detection:
    driver: bridge
